{
  "type": "object",
  "properties": {
    "triggerId": {
      "description": "The Trigger ID uniquely identifies the GTM Trigger",
      "type": "string"
    },
    "type": {
      "$ref": "#/definitions/GtmTriggerType",
      "description": "The Trigger ID uniquely identifies the GTM Trigger"
    },
    "autoEventFilter": {
      "description": "Used in the case of auto event tracking",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GtmFilter"
      }
    },
    "checkValidation": {
      "description": "Whether or not we should only fire tags if the form submit or link click event\nis not cancelled by some other event handler (e.g. because of validation).\nOnly valid for Form Submission and Link Click triggers",
      "$ref": "#/definitions/GtmBooleanParameter"
    },
    "continuousTimeMinMilliseconds": {
      "description": "A visibility trigger minimum continuous visible time (in milliseconds).\nOnly valid for AMP Visibility trigger",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "customEventFilter": {
      "description": "Used in the case of custom event, which is fired if all Conditions are true",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GtmFilter"
      }
    },
    "eventName": {
      "description": "Name of the GTM event that is fired.\nOnly valid for Timer triggers",
      "$ref": "#/definitions/GtmTemplateParameter"
    },
    "filter": {
      "description": "The trigger will only fire iff all Conditions are true",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GtmFilter"
      }
    },
    "horizontalScrollPercentageList": {
      "description": "List of integer percentage values for scroll triggers.\nThe trigger will fire when each percentage is reached when\nthe view is scrolled horizontally.\nOnly valid for AMP scroll triggers",
      "$ref": "#/definitions/GtmListParameter<GtmIntegerParameter>"
    },
    "interval": {
      "description": "Time between triggering recurring Timer Events (in milliseconds).\nOnly valid for Timer triggers",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "intervalSeconds": {
      "description": "Time between Timer Events to fire (in seconds).\nOnly valid for AMP Timer trigger",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "limit": {
      "description": "Limit of the number of GTM events this Timer Trigger will fire.\nIf no limit is set, we will continue to fire GTM events until\nthe user leaves the page. Only valid for Timer triggers",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "maxTimerLengthSeconds": {
      "description": "Max time to fire Timer Events (in seconds).\nOnly valid for AMP Timer trigger",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "parameter": {
      "description": "Additional parameters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GtmAnyDeepParameter"
      }
    },
    "selector": {
      "description": "A click trigger CSS selector (i.e. \"a\", \"button\" etc.).\nOnly valid for AMP Click trigger",
      "$ref": "#/definitions/GtmTemplateParameter"
    },
    "totalTimeMinMilliseconds": {
      "description": "A visibility trigger minimum total visible time (in milliseconds).\nOnly valid for AMP Visibility trigger",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "uniqueTriggerId": {
      "$ref": "#/definitions/GtmTemplateParameter",
      "description": "Globally unique id of the trigger that auto-generates this\n(a Form Submit, Link Click or Timer listener) if any.\nUsed to make incompatible auto-events work together with\ntrigger filtering based on trigger ids.\nThis value is populated during output generation since\nthe tags implied by triggers don't exist until then.\nOnly valid for Form Submit, Link Click and Timer triggers"
    },
    "verticalScrollPercentageList": {
      "description": "List of integer percentage values for scroll triggers.\nThe trigger will fire when each percentage is reached when\nthe view is scrolled vertically.\nOnly valid for AMP scroll triggers",
      "$ref": "#/definitions/GtmListParameter<GtmIntegerParameter>"
    },
    "visibilitySelector": {
      "description": "A visibility trigger CSS selector (i.e. \"#id\").\nOnly valid for AMP Visibility trigger",
      "$ref": "#/definitions/GtmTemplateParameter"
    },
    "visiblePercentageMax": {
      "description": "A visibility trigger maximum percent visibility.\nOnly valid for AMP Visibility trigger",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "visiblePercentageMin": {
      "description": "A visibility trigger minimum percent visibility.\nOnly valid for AMP Visibility trigger",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "waitForTags": {
      "description": "Whether or not we should delay the form submissions or link opening until\nall of the tags have fired (by preventing the default action and\nlater simulating the default action).\nOnly valid for Form Submission and Link Click triggers",
      "$ref": "#/definitions/GtmBooleanParameter"
    },
    "waitForTagsTimeout": {
      "description": "How long to wait (in milliseconds) for tags to fire\nwhen 'waits_for_tags' above evaluates to true.\nOnly valid for Form Submission and Link Click triggers",
      "$ref": "#/definitions/GtmIntegerParameter"
    },
    "parentFolderId": {
      "description": "Parent folder id",
      "type": "string"
    },
    "accountId": {
      "description": "GTM Account ID",
      "type": "string"
    },
    "containerId": {
      "description": "The Container ID uniquely identifies the GTM Container",
      "type": "string"
    },
    "path": {
      "description": "relative path",
      "type": "string"
    },
    "name": {
      "description": "Display name",
      "type": "string"
    },
    "tagManagerUrl": {
      "description": "Auto generated link to the tag manager UI",
      "type": "string"
    },
    "fingerprint": {
      "description": "The fingerprint of the property as computed at storage time.\nThis value is recomputed whenever the account is modified",
      "type": "string"
    },
    "notes": {
      "description": "User notes",
      "type": "string"
    }
  },
  "additionalProperties": false,
  "required": [
    "accountId",
    "containerId",
    "fingerprint",
    "name",
    "parameter",
    "triggerId",
    "type",
    "uniqueTriggerId"
  ],
  "definitions": {
    "GtmTriggerType": {
      "type": "string",
      "enum": [
        "ALWAYS",
        "AMP_CLICK",
        "AMP_SCROLL",
        "AMP_TIMER",
        "AMP_VISIBILITY",
        "CLICK",
        "CONSENT_INIT",
        "CUSTOM_EVENT",
        "DOM_READY",
        "ELEMENT_VISIBILITY",
        "EVENT_TYPE_UNSPECIFIED",
        "FIREBASE_APP_EXCEPTION",
        "FIREBASE_APP_UPDATE",
        "FIREBASE_CAMPAIGN",
        "FIREBASE_FIRST_OPEN",
        "FIREBASE_IN_APP_PURCHASE",
        "FIREBASE_NOTIFICATION_DISMISS",
        "FIREBASE_NOTIFICATION_FOREGROUND",
        "FIREBASE_NOTIFICATION_OPEN",
        "FIREBASE_NOTIFICATION_RECEIVE",
        "FIREBASE_OS_UPDATE",
        "FIREBASE_SESSION_START",
        "FIREBASE_USER_ENGAGEMENT",
        "FORM_SUBMISSION",
        "HISTORY_CHANGE",
        "INIT",
        "JS_ERROR",
        "LINK_CLICK",
        "PAGEVIEW",
        "SCROLL_DEPTH",
        "SERVER_PAGEVIEW",
        "TIMER",
        "TRIGGER_GROUP",
        "WINDOW_LOADED",
        "YOU_TUBE_VIDEO"
      ]
    },
    "GtmFilter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FilterType",
          "description": "The type of operator for this condition"
        },
        "parameter": {
          "description": "A list of named parameters (key/value), depending on the condition's type\n\nNotes:\n  - For binary operators, include parameters named arg0 and arg1 for specifying\n    the left and right operands, respectively\n  - At this time, the left operand (arg0) must be a reference to a variable.\n  - For case-insensitive Regex matching, include a boolean parameter named\n    ignore_case that is set to true. If not specified or set to any other value,\n    the matching will be case sensitive\n  - To negate an operator, include a boolean parameter named\n    negate boolean parameter that is set to true",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GtmAnyListParameter"
          }
        }
      },
      "additionalProperties": false,
      "required": [
        "parameter",
        "type"
      ]
    },
    "FilterType": {
      "type": "string",
      "enum": [
        "CONDITION_TYPE_UNSPECIFIED",
        "CONTAINS",
        "CSS_SELECTOR",
        "ENDS_WITH",
        "EQUALS",
        "GREATER",
        "GREATER_OR_EQUALS",
        "LESS",
        "LESS_OR_EQUALS",
        "MATCH_REGEX",
        "STARTS_WITH",
        "URL_MATCHES"
      ]
    },
    "GtmAnyListParameter": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Omit<GtmAnyValueParameter,\"key\">"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "LIST"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "list",
        "type"
      ]
    },
    "Omit<GtmAnyValueParameter,\"key\">": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/GtmParameter.Type",
          "description": "The parameter type"
        },
        "value": {
          "type": [
            "string",
            "number"
          ]
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmParameter.Type": {
      "enum": [
        "BOOLEAN",
        "INTEGER",
        "TAG_REFERENCE",
        "TEMPLATE",
        "TRIGGER_REFERENCE"
      ],
      "type": "string"
    },
    "GtmBooleanParameter": {
      "type": "object",
      "properties": {
        "value": {
          "enum": [
            "false",
            "true"
          ],
          "type": "string"
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "BOOLEAN"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmIntegerParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "INTEGER"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmTemplateParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "TEMPLATE"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmListParameter<GtmIntegerParameter>": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Omit<GtmIntegerParameter,\"key\">"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "LIST"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "list",
        "type"
      ]
    },
    "Omit<GtmIntegerParameter,\"key\">": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "INTEGER"
        },
        "value": {
          "type": "number"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmAnyDeepParameter": {
      "anyOf": [
        {
          "$ref": "#/definitions/GtmBooleanParameter"
        },
        {
          "$ref": "#/definitions/GtmIntegerParameter"
        },
        {
          "$ref": "#/definitions/GtmReferenceParameter"
        },
        {
          "$ref": "#/definitions/GtmTemplateParameter"
        },
        {
          "$ref": "#/definitions/GtmMapParameter<GtmAnyDeepParameter>"
        },
        {
          "$ref": "#/definitions/GtmListParameter<GtmAnyDeepParameter>"
        }
      ]
    },
    "GtmReferenceParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/GtmParameter.Type_1",
          "description": "The parameter type"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmParameter.Type_1": {
      "enum": [
        "TAG_REFERENCE",
        "TRIGGER_REFERENCE"
      ],
      "type": "string"
    },
    "GtmMapParameter<GtmAnyDeepParameter>": {
      "type": "object",
      "properties": {
        "map": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GtmAnyDeepParameter"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "MAP"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "map",
        "type"
      ]
    },
    "GtmListParameter<GtmAnyDeepParameter>": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Omit<GtmAnyDeepParameter,\"key\">"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "LIST"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "list",
        "type"
      ]
    },
    "Omit<GtmAnyDeepParameter,\"key\">": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/GtmParameter.Type_2",
          "description": "The parameter type"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "GtmParameter.Type_2": {
      "enum": [
        "BOOLEAN",
        "INTEGER",
        "LIST",
        "MAP",
        "TAG_REFERENCE",
        "TEMPLATE",
        "TRIGGER_REFERENCE"
      ],
      "type": "string"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}