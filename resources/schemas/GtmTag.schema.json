{
  "type": "object",
  "properties": {
    "tagId": {
      "description": "The Tag ID uniquely identifies the GTM Tag",
      "type": "string"
    },
    "type": {
      "description": "GTM Tag Type",
      "type": "string"
    },
    "consentSettings": {
      "description": "Consent settings of a tag",
      "type": "object",
      "properties": {
        "consentStatus": {
          "$ref": "#/definitions/GtmConsentStatus",
          "description": "The tag's consent status. If set to NEEDED, the runtime will check that\nthe consent types specified by the consent_type field have been granted"
        },
        "consentType": {
          "$ref": "#/definitions/GtmListParameter<GtmTemplateParameter>",
          "description": "The type of consents to check for during tag firing if in\nthe consent NEEDED state"
        }
      },
      "additionalProperties": false,
      "required": [
        "consentStatus",
        "consentType"
      ]
    },
    "firingRuleId": {
      "description": "Firing rule IDs. A tag will fire when any of the listed rules are true and\nall of its blockingRuleIds (if any specified) are false",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "blockingRuleId": {
      "description": "Blocking rule IDs. If any of the listed rules evaluate to true,\nthe tag will not fire",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "firingTriggerId": {
      "description": "Firing trigger IDs. A tag will fire when any of the listed triggers are true\nand all of its blockingTriggerIds (if any specified) are false",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "liveOnly": {
      "description": "If set to true, this tag will only fire in the live environment\n(e.g. not in preview or debug mode)",
      "type": "boolean"
    },
    "monitoringMetadata": {
      "$ref": "#/definitions/GtmMapParameter<GtmTemplateParameter>",
      "description": "A map of key-value pairs of tag metadata to be included\nin the event data for tag monitoring"
    },
    "parameter": {
      "description": "The tag's parameters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GtmAnyDeepParameter"
      }
    },
    "paused": {
      "description": "Indicates whether the tag is paused, which prevents the tag from firing",
      "type": "boolean"
    },
    "priority": {
      "$ref": "#/definitions/GtmIntegerParameter",
      "description": "User defined numeric priority of the tag.\nTags are fired asynchronously in order of priority.\nTags with higher numeric value fire first.\nA tag's priority can be a positive or negative value.\nThe default value is 0"
    },
    "scheduleStartMs": {
      "description": "The start timestamp in milliseconds to schedule a tag",
      "type": "number"
    },
    "scheduleEndMs": {
      "description": "The end timestamp in milliseconds to schedule a tag",
      "type": "number"
    },
    "setupTag": {
      "description": "The list of setup tags. Currently we only allow one",
      "type": "array",
      "items": [
        {
          "type": "object",
          "properties": {
            "tagName": {
              "description": "The name of the setup tag",
              "type": "string"
            },
            "stopOnSetupFailure": {
              "description": "If true, fire the main tag if and only if the setup tag fires successfully.\nIf false, fire the main tag regardless of setup tag firing status",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": [
            "stopOnSetupFailure",
            "tagName"
          ]
        }
      ],
      "minItems": 1,
      "maxItems": 1
    },
    "teardownTag": {
      "description": "The list of teardown tags. Currently we only allow one",
      "type": "array",
      "items": [
        {
          "type": "object",
          "properties": {
            "tagName": {
              "description": "The name of the teardown tag",
              "type": "string"
            },
            "stopTeardownOnFailure": {
              "description": "If true, fire the teardown tag if and only if the main tag fires successfully.\nIf false, fire the teardown tag regardless of main tag firing status",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": [
            "stopTeardownOnFailure",
            "tagName"
          ]
        }
      ],
      "minItems": 1,
      "maxItems": 1
    },
    "parentFolderId": {
      "description": "Parent folder id",
      "type": "string"
    },
    "accountId": {
      "description": "GTM Account ID",
      "type": "string"
    },
    "containerId": {
      "description": "The Container ID uniquely identifies the GTM Container",
      "type": "string"
    },
    "path": {
      "description": "relative path",
      "type": "string"
    },
    "name": {
      "description": "Display name",
      "type": "string"
    },
    "tagManagerUrl": {
      "description": "Auto generated link to the tag manager UI",
      "type": "string"
    },
    "fingerprint": {
      "description": "The fingerprint of the property as computed at storage time.\nThis value is recomputed whenever the account is modified",
      "type": "string"
    },
    "notes": {
      "description": "User notes",
      "type": "string"
    }
  },
  "additionalProperties": false,
  "required": [
    "accountId",
    "consentSettings",
    "containerId",
    "fingerprint",
    "monitoringMetadata",
    "name",
    "parameter",
    "priority",
    "setupTag",
    "tagId",
    "teardownTag",
    "type"
  ],
  "definitions": {
    "GtmConsentStatus": {
      "type": "string",
      "enum": [
        "NEEDED",
        "NOT_NEEDED",
        "NOT_SET"
      ]
    },
    "GtmListParameter<GtmTemplateParameter>": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Omit<GtmTemplateParameter,\"key\">"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "LIST"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "list",
        "type"
      ]
    },
    "Omit<GtmTemplateParameter,\"key\">": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "TEMPLATE"
        },
        "value": {
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmMapParameter<GtmTemplateParameter>": {
      "type": "object",
      "properties": {
        "map": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GtmTemplateParameter"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "MAP"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "map",
        "type"
      ]
    },
    "GtmTemplateParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "TEMPLATE"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmAnyDeepParameter": {
      "anyOf": [
        {
          "$ref": "#/definitions/GtmBooleanParameter"
        },
        {
          "$ref": "#/definitions/GtmIntegerParameter"
        },
        {
          "$ref": "#/definitions/GtmReferenceParameter"
        },
        {
          "$ref": "#/definitions/GtmTemplateParameter"
        },
        {
          "$ref": "#/definitions/GtmMapParameter<GtmAnyDeepParameter>"
        },
        {
          "$ref": "#/definitions/GtmListParameter<GtmAnyDeepParameter>"
        }
      ]
    },
    "GtmBooleanParameter": {
      "type": "object",
      "properties": {
        "value": {
          "enum": [
            "false",
            "true"
          ],
          "type": "string"
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "BOOLEAN"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmIntegerParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "INTEGER"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmReferenceParameter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/GtmParameter.Type",
          "description": "The parameter type"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "value"
      ]
    },
    "GtmParameter.Type": {
      "enum": [
        "TAG_REFERENCE",
        "TRIGGER_REFERENCE"
      ],
      "type": "string"
    },
    "GtmMapParameter<GtmAnyDeepParameter>": {
      "type": "object",
      "properties": {
        "map": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GtmAnyDeepParameter"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "MAP"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "map",
        "type"
      ]
    },
    "GtmListParameter<GtmAnyDeepParameter>": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Omit<GtmAnyDeepParameter,\"key\">"
          }
        },
        "type": {
          "description": "The parameter type",
          "type": "string",
          "const": "LIST"
        },
        "key": {
          "description": "The named key that uniquely identifies a parameter",
          "type": "string"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "list",
        "type"
      ]
    },
    "Omit<GtmAnyDeepParameter,\"key\">": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/GtmParameter.Type_1",
          "description": "The parameter type"
        },
        "isWeakReference": {
          "description": "Whether or not a reference type parameter is strongly or weakly referenced.\nOnly used by Transformations",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "GtmParameter.Type_1": {
      "enum": [
        "BOOLEAN",
        "INTEGER",
        "LIST",
        "MAP",
        "TAG_REFERENCE",
        "TEMPLATE",
        "TRIGGER_REFERENCE"
      ],
      "type": "string"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}